#
# Settings for ant's build.xml
#
# CHANGE THIS: yourcertificatepassword
# Something nice and long, you're not typing it often.  Keep it safe, especially
# once you have distributed your application.  If you change the signature, it
# causes all kinds of mayhem with uninstalling, or installing future versions.
#
# Also, don't add the certificate to version control.
#

# What the output file is named.  Change this to your app.
targetname=Example

# App properties & metadata
app.deploy=./deploy
app.title=Example App
app.id=com.evildave.${targetname}
app.background.color=000000
app.foreground.color=c0c0c0
app.framerate=60
app.width=500
app.height=500
app.CX=250
app.CY=250
# landscape|portrait|auto
app.orientation=landscape

# Where final outputs go
app.publish=publish


# Allow us to give specific paths to various tools.
AIR.MXMLC=mxmlc
AIR.ADT=adt
AIR.ADL=adl
AIR.ASDOC=asdoc
GNU.TAIL=tail


# Where to look for source files
source.dir=./src

# Build various filenames and paths 
source.file=${source.dir}/com/${targetname}/Main.as
output.file=${targetname}.swf

# Where to look for native extensions and their swc content
library.path=${source.dir}/extension

######################################
## Output SWF Properties
######################################

#
# AIR SDK version
#
# THIS MUST MATCH fullplayerversion in the Descriptor files: 
# <application xmlns="http://ns.adobe.com/air/application/17.0">
#
# THIS MUST MATCH the version of AIR SDK that you downloaded.
# Look for air-sdk-description.xml in the root of the AIR SDK folder
#
fullplayerversion=17.0

# Where to write documents to
doc.dir=asdoc

# Title for documents
doc.title=Example Application

# Where we buried the Flash resources
# Important: You must bind the swc, not load a swf, if you plan to build for iOS
resource_swc=${source.dir}/FlashResources.swc

#
# Adobe AIR SDK Parameters 
#
air.deploy=${app.deploy}/air
air.profile=${app.deploy}/Descriptor-air.xml
air.swf=${targetname}.swf
air.swf.path=${air.deploy}/${air.swf}
air.output=${app.publish}/${targetname}.air
air.certificate=${app.deploy}/air.p12
air.cert.password=yourcertificatepassword
# Native installer output (gets extension from OS it's built for)
air.output.native=${app.publish}/${targetname}

#
# iOS Parameters
#
ios.deploy=${app.deploy}/ios
ios.profile=${app.deploy}/Descriptor-ios.xml
ios.swf=${targetname}.swf
ios.swf.path=${ios.deploy}/${ios.swf}
ios.output=${app.publish}/${targetname}.ipa
# Use my installed certificate.  This is 'private', and generated per user.  
# Should be excluded from version control.
#Legacy JVM for OS X Mountain lion/Yosemite, for fdb and older versions of many apps
# https://support.apple.com/kb/DL1572?locale=en_US
# http://help.adobe.com/en_US/as3/iphone/WS144092a96ffef7cc-371badff126abc17b1f-7fff.html
# https://www.google.com?q=create+p12+and+mobileprovision
# http://www.joshmorony.com/how-to-create-an-ios-provisioning-profile-and-p12-with-windows/
# Swap out ad-hoc, versus app store mobileprovision, when you're ready.
# If all of the windows steps are too much, you can use a Mac to export the 
# certificate, and copy it and the settings over to here.
ios.mobileprovision=${app.deploy}/ios.mobileprovision
ios.certificate=${app.deploy}/ios.p12
ios.cert.password=yourcertificatepassword

# If you only have one iOS device, this will be 'right', otherwise, you'll have to specify for which
# adt -devices -platform ios
ios.device=1

#
# Android Parameters
#
android.deploy=${app.deploy}/android
android.profile=${app.deploy}/Descriptor-android.xml
android.swf=${targetname}.swf
android.swf.path=${android.deploy}/${android.swf}
android.output=${app.publish}/${targetname}.apk
# Use the self-signed certificate.
android.certificate=${app.deploy}/android.p12
android.cert.password=yourcertificatepassword

# This is the android device id 
# adt -devices -platform android
android.device=0000000000000000

# This is your computer's network address, for invoking fdb 'backwards', or without a cable.
fdb.ip=192.168.0.50

